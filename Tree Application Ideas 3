#include <bits/stdc++.h>
using namespace std;

const int N = 100100;
vector<int> g[N];
int ans[N];
int val[N];

void dfs(int node, int par, int maxval, int minval){
    ans[node] = max(abs(maxval - val[node]), abs(minval - val[node]));
    for(auto v : g[node]){
        if(v != par){
            dfs(v, node, max(maxval, val[node]), min(minval, val[node]));
        }
    }
}

void solve(){
    int n;
    cin >> n;

    for(int i = 1; i <= n; ++i){
        cin >> val[i];
    }

    for(int i = 0; i < n - 1; ++i){
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }

    dfs(1, -1, val[1], val[1]);

    for(int i = 1; i <= n; ++i){
        cout << ans[i] << ' ';
    }
    cout << endl;
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    solve();
}

///////////// i am not done with finding the minimum absolute difference   /////////////////////
