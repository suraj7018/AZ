#include <bits/stdc++.h>
using namespace std;

void solve() {
    int n;
    cin >> n;
    int arr[n];
    int insertedat[n];

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    vector<int> lis;
    for (int i = 0; i < n; i++) {
        if (lis.empty() || lis.back() < arr[i]) {
            lis.push_back(arr[i]);
            insertedat[i] = lis.size() - 1;
        } else {
            auto it = lower_bound(lis.begin(), lis.end(), arr[i]);
            *it = arr[i];
            insertedat[i] = it - lis.begin();
        }
    }

    // Now reconstruct the LIS
    int curlen = lis.size() - 1;
    vector<int> final_lis;
    for (int i = n - 1; i >= 0; i--) {
        if (insertedat[i] == curlen) {
            final_lis.push_back(arr[i]);
            curlen--;
        }
    }

    reverse(final_lis.begin(), final_lis.end());

    // Output
    cout << lis.size() << endl;
    for (auto v : final_lis) {
        cout << v << ",";
    }
}

int main() {
    solve();
}
