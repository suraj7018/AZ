#include <bits/stdc++.h>
using namespace std;

int n;
int arr[501];
int dp[501][501];

int rec(int l, int r) {
    // pruning
    // base case
    if(l==r){
        return 0;
    }
    // cache check
    if(dp[l][r] != -1){
        return dp[l][r];
    }
    // transition
    int ans = 0;
    int tot = 0;
    int sum = 0;
    for(int mid=l;mid<=r;mid++){
        tot+=arr[mid];
    }
    for(int mid=l;mid<r;mid++){
        sum+=arr[mid];
        ans = max(ans, rec(l,mid)+rec(mid+1,r)+(sum%100)*(tot-sum)%100);
    }
    // save and return
    return dp[l][r] = ans;
}

void solve(){
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    memset(dp,-1,sizeof(dp));
    cout <<rec(0,n-1)<<endl;
}

int main(){
    solve();
}
