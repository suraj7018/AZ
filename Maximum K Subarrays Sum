#include<bits/stdc++.h>
using namespace std;

int n, k;
int arr[1010];
int p[1010];
int done[1010][1010];
int dp[1010][1010];

int rec(int i, int k){
    // pruning
    // base case
    if (k == 0) return 0;
    if (i < 0) return -1e9;
    // cache check
    if (done[i][k]) return dp[i][k];
    // transition
    int ans = rec(i - 1, k);
    for (int j = 0; j <= i; j++) {
        ans = max(ans, rec(j - 1, k - 1) + (p[i + 1] - p[j]));
    }
    // save and return
    done[i][k] = 1;
    return dp[i][k] = ans;
}

void solve(){
    cin >> n >> k;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    p[0] = 0;
    for (int j = 1; j <= n; j++) {
        p[j] = arr[j - 1] + p[j - 1];
    }
    cout << rec(n - 1, k) << endl;
}

int main(){
    solve();
}
